// Generated by view binder compiler. Do not edit!
package com.example.projectteam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projectteam.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddProjectBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final AppCompatButton btnAdd;

  @NonNull
  public final View btnBack;

  @NonNull
  public final ConstraintLayout datePicker;

  @NonNull
  public final TextView dateValidation;

  @NonNull
  public final TextView edate;

  @NonNull
  public final ConstraintLayout layoutPdes;

  @NonNull
  public final ConstraintLayout layoutPname;

  @NonNull
  public final ConstraintLayout layoutTname;

  @NonNull
  public final EditText pdes;

  @NonNull
  public final TextView pdesValidation;

  @NonNull
  public final EditText pname;

  @NonNull
  public final TextView pnameValidations;

  @NonNull
  public final TextView sdate;

  @NonNull
  public final AutoCompleteTextView tname;

  @NonNull
  public final TextView tnameValidations;

  @NonNull
  public final ConstraintLayout toolbar;

  @NonNull
  public final TextView tvEdate;

  @NonNull
  public final TextView tvHeading;

  @NonNull
  public final TextView tvPdes;

  @NonNull
  public final TextView tvPname;

  @NonNull
  public final TextView tvSdate;

  @NonNull
  public final TextView tvTname;

  private ActivityAddProjectBinding(@NonNull ScrollView rootView, @NonNull AppCompatButton btnAdd,
      @NonNull View btnBack, @NonNull ConstraintLayout datePicker, @NonNull TextView dateValidation,
      @NonNull TextView edate, @NonNull ConstraintLayout layoutPdes,
      @NonNull ConstraintLayout layoutPname, @NonNull ConstraintLayout layoutTname,
      @NonNull EditText pdes, @NonNull TextView pdesValidation, @NonNull EditText pname,
      @NonNull TextView pnameValidations, @NonNull TextView sdate,
      @NonNull AutoCompleteTextView tname, @NonNull TextView tnameValidations,
      @NonNull ConstraintLayout toolbar, @NonNull TextView tvEdate, @NonNull TextView tvHeading,
      @NonNull TextView tvPdes, @NonNull TextView tvPname, @NonNull TextView tvSdate,
      @NonNull TextView tvTname) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnBack = btnBack;
    this.datePicker = datePicker;
    this.dateValidation = dateValidation;
    this.edate = edate;
    this.layoutPdes = layoutPdes;
    this.layoutPname = layoutPname;
    this.layoutTname = layoutTname;
    this.pdes = pdes;
    this.pdesValidation = pdesValidation;
    this.pname = pname;
    this.pnameValidations = pnameValidations;
    this.sdate = sdate;
    this.tname = tname;
    this.tnameValidations = tnameValidations;
    this.toolbar = toolbar;
    this.tvEdate = tvEdate;
    this.tvHeading = tvHeading;
    this.tvPdes = tvPdes;
    this.tvPname = tvPname;
    this.tvSdate = tvSdate;
    this.tvTname = tvTname;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddProjectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddProjectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_project, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddProjectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd;
      AppCompatButton btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btnBack;
      View btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.datePicker;
      ConstraintLayout datePicker = ViewBindings.findChildViewById(rootView, id);
      if (datePicker == null) {
        break missingId;
      }

      id = R.id.dateValidation;
      TextView dateValidation = ViewBindings.findChildViewById(rootView, id);
      if (dateValidation == null) {
        break missingId;
      }

      id = R.id.edate;
      TextView edate = ViewBindings.findChildViewById(rootView, id);
      if (edate == null) {
        break missingId;
      }

      id = R.id.layoutPdes;
      ConstraintLayout layoutPdes = ViewBindings.findChildViewById(rootView, id);
      if (layoutPdes == null) {
        break missingId;
      }

      id = R.id.layoutPname;
      ConstraintLayout layoutPname = ViewBindings.findChildViewById(rootView, id);
      if (layoutPname == null) {
        break missingId;
      }

      id = R.id.layoutTname;
      ConstraintLayout layoutTname = ViewBindings.findChildViewById(rootView, id);
      if (layoutTname == null) {
        break missingId;
      }

      id = R.id.pdes;
      EditText pdes = ViewBindings.findChildViewById(rootView, id);
      if (pdes == null) {
        break missingId;
      }

      id = R.id.pdesValidation;
      TextView pdesValidation = ViewBindings.findChildViewById(rootView, id);
      if (pdesValidation == null) {
        break missingId;
      }

      id = R.id.pname;
      EditText pname = ViewBindings.findChildViewById(rootView, id);
      if (pname == null) {
        break missingId;
      }

      id = R.id.pnameValidations;
      TextView pnameValidations = ViewBindings.findChildViewById(rootView, id);
      if (pnameValidations == null) {
        break missingId;
      }

      id = R.id.sdate;
      TextView sdate = ViewBindings.findChildViewById(rootView, id);
      if (sdate == null) {
        break missingId;
      }

      id = R.id.tname;
      AutoCompleteTextView tname = ViewBindings.findChildViewById(rootView, id);
      if (tname == null) {
        break missingId;
      }

      id = R.id.tnameValidations;
      TextView tnameValidations = ViewBindings.findChildViewById(rootView, id);
      if (tnameValidations == null) {
        break missingId;
      }

      id = R.id.toolbar;
      ConstraintLayout toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvEdate;
      TextView tvEdate = ViewBindings.findChildViewById(rootView, id);
      if (tvEdate == null) {
        break missingId;
      }

      id = R.id.tvHeading;
      TextView tvHeading = ViewBindings.findChildViewById(rootView, id);
      if (tvHeading == null) {
        break missingId;
      }

      id = R.id.tvPdes;
      TextView tvPdes = ViewBindings.findChildViewById(rootView, id);
      if (tvPdes == null) {
        break missingId;
      }

      id = R.id.tvPname;
      TextView tvPname = ViewBindings.findChildViewById(rootView, id);
      if (tvPname == null) {
        break missingId;
      }

      id = R.id.tvSdate;
      TextView tvSdate = ViewBindings.findChildViewById(rootView, id);
      if (tvSdate == null) {
        break missingId;
      }

      id = R.id.tvTname;
      TextView tvTname = ViewBindings.findChildViewById(rootView, id);
      if (tvTname == null) {
        break missingId;
      }

      return new ActivityAddProjectBinding((ScrollView) rootView, btnAdd, btnBack, datePicker,
          dateValidation, edate, layoutPdes, layoutPname, layoutTname, pdes, pdesValidation, pname,
          pnameValidations, sdate, tname, tnameValidations, toolbar, tvEdate, tvHeading, tvPdes,
          tvPname, tvSdate, tvTname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

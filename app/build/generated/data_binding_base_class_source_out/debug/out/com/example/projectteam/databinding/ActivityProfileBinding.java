// Generated by view binder compiler. Do not edit!
package com.example.projectteam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projectteam.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View btnBack;

  @NonNull
  public final AppCompatButton btnDelete;

  @NonNull
  public final AppCompatButton btnUpdate;

  @NonNull
  public final TextView edate;

  @NonNull
  public final TextView pdes;

  @NonNull
  public final TextView pname;

  @NonNull
  public final TextView projid;

  @NonNull
  public final TextView sdate;

  @NonNull
  public final TextView tname;

  @NonNull
  public final ConstraintLayout toolbar;

  @NonNull
  public final TextView tvEDate;

  @NonNull
  public final TextView tvHeading;

  @NonNull
  public final TextView tvPDes;

  @NonNull
  public final TextView tvProjectId;

  @NonNull
  public final TextView tvSDate;

  @NonNull
  public final TextView tvTName;

  private ActivityProfileBinding(@NonNull ConstraintLayout rootView, @NonNull View btnBack,
      @NonNull AppCompatButton btnDelete, @NonNull AppCompatButton btnUpdate,
      @NonNull TextView edate, @NonNull TextView pdes, @NonNull TextView pname,
      @NonNull TextView projid, @NonNull TextView sdate, @NonNull TextView tname,
      @NonNull ConstraintLayout toolbar, @NonNull TextView tvEDate, @NonNull TextView tvHeading,
      @NonNull TextView tvPDes, @NonNull TextView tvProjectId, @NonNull TextView tvSDate,
      @NonNull TextView tvTName) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnDelete = btnDelete;
    this.btnUpdate = btnUpdate;
    this.edate = edate;
    this.pdes = pdes;
    this.pname = pname;
    this.projid = projid;
    this.sdate = sdate;
    this.tname = tname;
    this.toolbar = toolbar;
    this.tvEDate = tvEDate;
    this.tvHeading = tvHeading;
    this.tvPDes = tvPDes;
    this.tvProjectId = tvProjectId;
    this.tvSDate = tvSDate;
    this.tvTName = tvTName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      View btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnDelete;
      AppCompatButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnUpdate;
      AppCompatButton btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.edate;
      TextView edate = ViewBindings.findChildViewById(rootView, id);
      if (edate == null) {
        break missingId;
      }

      id = R.id.pdes;
      TextView pdes = ViewBindings.findChildViewById(rootView, id);
      if (pdes == null) {
        break missingId;
      }

      id = R.id.pname;
      TextView pname = ViewBindings.findChildViewById(rootView, id);
      if (pname == null) {
        break missingId;
      }

      id = R.id.projid;
      TextView projid = ViewBindings.findChildViewById(rootView, id);
      if (projid == null) {
        break missingId;
      }

      id = R.id.sdate;
      TextView sdate = ViewBindings.findChildViewById(rootView, id);
      if (sdate == null) {
        break missingId;
      }

      id = R.id.tname;
      TextView tname = ViewBindings.findChildViewById(rootView, id);
      if (tname == null) {
        break missingId;
      }

      id = R.id.toolbar;
      ConstraintLayout toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvEDate;
      TextView tvEDate = ViewBindings.findChildViewById(rootView, id);
      if (tvEDate == null) {
        break missingId;
      }

      id = R.id.tvHeading;
      TextView tvHeading = ViewBindings.findChildViewById(rootView, id);
      if (tvHeading == null) {
        break missingId;
      }

      id = R.id.tvPDes;
      TextView tvPDes = ViewBindings.findChildViewById(rootView, id);
      if (tvPDes == null) {
        break missingId;
      }

      id = R.id.tvProjectId;
      TextView tvProjectId = ViewBindings.findChildViewById(rootView, id);
      if (tvProjectId == null) {
        break missingId;
      }

      id = R.id.tvSDate;
      TextView tvSDate = ViewBindings.findChildViewById(rootView, id);
      if (tvSDate == null) {
        break missingId;
      }

      id = R.id.tvTName;
      TextView tvTName = ViewBindings.findChildViewById(rootView, id);
      if (tvTName == null) {
        break missingId;
      }

      return new ActivityProfileBinding((ConstraintLayout) rootView, btnBack, btnDelete, btnUpdate,
          edate, pdes, pname, projid, sdate, tname, toolbar, tvEDate, tvHeading, tvPDes,
          tvProjectId, tvSDate, tvTName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
